{"version":3,"sources":["Grader.js","App.js","index.js"],"names":["Q_WEIGHTS","INPUTS","type","key","number","label","gradeTracker","this","participation","quizzes","project","1","2","num","filter","q","setProject","grade","found","forEach","push","sort","a","b","total","reduce","prev","curr","i","console","log","divisor","Grader","useState","setGrade","adjustedGrade","setAdjustedGrade","q1","q2","q3","q4","q5","p1","p2","values","setValues","handleBlur","input","asFloat","parseFloat","isNaN","start","end","Math","min","max","clip","setParticipation","setQuiz","clearParticipation","clearQuiz","clearProject","map","className","htmlFor","id","value","onChange","e","handleChange","target","onBlur","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.abb3f2cf.chunk.js","sourcesContent":["import React, { useState } from \"react\"\n\nconst Q_WEIGHTS = [ .2, .16, .12, .08, .04 ]\n\nclass GradeTracker {\n\n    constructor () {\n        this.participation = -1\n        this.quizzes = []\n        this.project = {\n            1: -1,\n            2: -1\n        }\n    }\n\n    clearParticipation () {\n        this.participation = -1\n        return this\n    }\n\n    clearQuiz (num) {\n        this.quizzes = this.quizzes.filter(q => q.num !== num)\n        return this\n    }\n\n    clearProject (num) {\n        this.setProject(-1, num)\n        return this\n    }\n\n    setParticipation (grade) {\n        this.participation = grade\n        return this\n    }\n\n    setQuiz (grade, num) {\n        let found = false\n        this.quizzes.forEach(q => {\n            if (q.num === num) {\n                found = true\n                q.grade = grade\n            }\n        })\n        if (!found) this.quizzes.push({ num, grade })\n        this.quizzes.sort((a, b) => b.grade - a.grade)\n        return this\n    }\n\n    setProject (grade, num) {\n        if (num === 1 || num === 2) {\n            this.project[num] = grade\n        }\n        return this\n    }\n\n    get grade () {\n        let total = 0\n        if (this.participation >= 0) {\n            total += this.participation * 0.15\n        }\n        // calculate quizzes\n        total += this.quizzes.reduce((prev, curr, i) => {\n            console.log(curr)\n            return prev + curr.grade * Q_WEIGHTS[i]\n        }, 0)\n        // add project\n        if (this.project[1] >= 0) total += this.project[1] * 0.15\n        if (this.project[2] >= 0) total += this.project[2] * 0.1\n        return total\n    }\n\n    get adjustedGrade () {\n        let total = 0\n        let divisor = 0\n        if (this.participation >= 0) {\n            total += this.participation * 0.15\n            divisor += 0.15\n        }\n        // calculate quizzes\n        total += this.quizzes.reduce((prev, curr, i) => {\n            divisor += Q_WEIGHTS[i]\n            return prev + curr.grade * Q_WEIGHTS[i]\n        }, 0)\n        // add project\n        if (this.project[1] >= 0) {\n            total += this.project[1] * 0.15\n            divisor += 0.15\n        }\n        if (this.project[2] >= 0) {\n            total += this.project[2] * 0.1\n            divisor += 0.1\n        }\n        if (divisor === 0) return 0\n        return total / divisor\n    }\n\n}\n\nfunction clip (num, start=0, end=100) {\n    return Math.min(Math.max(start, num), end)\n}\n\nconst INPUTS = [\n    { type: \"participation\", key: \"participation\", number: 0, label: \"Participation\" },\n    { type: \"quiz\", key: \"q1\", number: 1, label: \"Quiz 1\" },\n    { type: \"quiz\", key: \"q2\", number: 2, label: \"Quiz 2\" },\n    { type: \"quiz\", key: \"q3\", number: 3, label: \"Quiz 3\" },\n    { type: \"quiz\", key: \"q4\", number: 4, label: \"Quiz 4\" },\n    { type: \"quiz\", key: \"q5\", number: 5, label: \"Quiz 5\" },\n    { type: \"project\", key: \"p1\", number: 1, label: \"Project 1\" },\n    { type: \"project\", key: \"p2\", number: 2, label: \"Project 2\" }\n]\n\nconst gradeTracker = new GradeTracker()\n\nexport default function Grader () {\n    const [ grade, setGrade ] = useState(0)\n    const [ adjustedGrade, setAdjustedGrade ] = useState(0)\n    const [ values, setValues ] = useState({\n        participation: \"\",\n        q1: \"\",\n        q2: \"\",\n        q3: \"\",\n        q4: \"\",\n        q5: \"\",\n        p1: \"\",\n        p2: \"\"\n    })\n\n    const handleChange = (key, value) => {\n        setValues({\n            ...values,\n            [key]: value\n        })\n    }\n\n    const handleBlur = (type, key, number) => {\n        // vet input\n        const input = values[key]\n        const asFloat = parseFloat(input)\n        if (input !== \"\" && isNaN(asFloat)) {\n            setValues({\n                ...values,\n                [key]: \"\"\n            })\n            return\n        } \n        // if good, continue\n        if (input !== \"\") {\n            const grade = clip(asFloat)\n            setValues({ ...values, [key]: grade })\n            if (type === \"participation\") {\n                gradeTracker.setParticipation(grade)\n            } else if (type === \"quiz\") {\n                gradeTracker.setQuiz(grade, number)\n            } else {\n                gradeTracker.setProject(grade, number)\n            }\n            setGrade(gradeTracker.grade)\n            setAdjustedGrade(gradeTracker.adjustedGrade)\n        } else {\n            setValues({ ...values, [key]: \"\" })\n            if (type === \"participation\") {\n                gradeTracker.clearParticipation()\n            } else if (type === \"quiz\") {\n                gradeTracker.clearQuiz(number)\n            } else {\n                gradeTracker.clearProject(number)\n            }\n            setGrade(gradeTracker.grade)\n            setAdjustedGrade(gradeTracker.adjustedGrade)\n        }\n    }\n\n    return (\n        <div>\n            { INPUTS.map(({ type, key, number, label }, i) => {\n                return (\n                    <div className=\"gradeInput\" key={i} >\n                        <label htmlFor={key}>{label} (out of 100)</label>\n                        <input \n                            type=\"text\" \n                            id={key} \n                            value={values[key]}\n                            onChange={(e) => handleChange(key, e.target.value)}\n                            onBlur={() => handleBlur(type, key, number)}\n                        />\n                    </div>\n                )\n            }) }\n            <h2>Grades</h2>\n            <div>\n                <strong>Current Grade: </strong> { adjustedGrade }\n            </div>\n            <div>\n                <strong>Final Grade: </strong> { grade }\n            </div>\n        </div>\n    )\n}","import React from \"react\"\nimport \"./App.css\"\nimport Grader from \"./Grader\"\n\nfunction App () {\n  \treturn (\n\t\t<div className=\"app\">\n\t\t\t<h1>GOV 370E Grader</h1>\n\t\t\t<p>Figure out your grade for Professor Theriault's Congressional Elections class. Extra credit isn't included so you'll have to calculate that yourself.</p>\n\t\t\t<Grader />\n\t\t</div>\n  \t);\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n"],"sourceRoot":""}